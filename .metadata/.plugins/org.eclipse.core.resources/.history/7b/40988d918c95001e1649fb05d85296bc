package EndSemExam2;
class Ax{
	public void add() {
		int i;
		for(i=0;i<100;i++)
			System.out.println(i);
	}
	public void sub() {
		int i;
		for(i=0;i<100;i++)
			System.out.println("sajan shrestha skdfljsdlfjslfjsdlfj");
	}
}
class SynchronizationExample {
    private Object lock = new Object();

    public synchronized void synchronizedMethod() {
        // Synchronized method
        for (int i = 0; i < 5; i++) {
            System.out.println(Thread.currentThread().getName() + ": " + i);
            try {
                Thread.sleep(100);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    }

    public void nonSynchronizedMethod() {
        // Non-synchronized method
        for (int i = 0; i < 5; i++) {
            System.out.println(Thread.currentThread().getName() + " (non-synchronized): " + i);
            try {
                Thread.sleep(100);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    }

 
}

public class multithreading {
	   public static void main(String[] args) {
	        SynchronizationExample example = new SynchronizationExample();

	        // Thread 1 accessing synchronized method
	        new Thread(() -> {
	            example.synchronizedMethod();
	        }).start();

	        // Thread 2 accessing non-synchronized method
	        new Thread(() -> {
	            example.nonSynchronizedMethod();
	        }).start();
	    }
}
